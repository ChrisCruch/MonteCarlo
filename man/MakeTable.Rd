% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/makeTable.R
\name{MakeTable}
\alias{MakeTable}
\title{Create Latex tables from MonteCarlo output.}
\usage{
MakeTable(output, param.list, rows, cols, digits = 4, collapse = NULL,
  Transform = NULL, func = NULL, width.mult = 1)
}
\arguments{
\item{output}{output list generated by MonteCarlo}

\item{param.list}{list of parameter grid that was pased to \code{MonteCarlo} to obtain output.}

\item{rows}{vector of parameter names that are supposed to be stacked in the rows of the table. Ordered from inner to outer.}

\item{cols}{vector of parameter names that are supposed to be stacked in the cols of the table. Ordered from inner to outer.}

\item{digits}{maximal number of digits displayed in table. Default is \code{digits=4}.}

\item{collapse}{either \code{NULL} or a list of the same as \code{output} giving the names of functions to be applied to the
repective components of \code{output} when collapsing results to table. By default means are taken. Another example could be \code{sd()}.}

\item{Transform}{optional argument to transform the output table (for example from MSE to RMSE). If a function is supplied
it is applied to all tables. Alternatively, a list of functions can be supplied that has the same length as \code{output}.
For tables that are supposed to stay unchanged set list element to \code{NULL}.}

\item{func}{function evaluated by \code{MonteCarlo} can optionally be supplied,
so that the function is printed as a commented verbatim after the table. Can be useful for future reference to parameter
specifications within \code{func}.
MakeTable<-function(output, rows, cols, digits=4, Transform=NULL, func=NULL)}

\item{width.mult}{scaling factor for width of the output table}
}
\description{
\code{MakeTable} generates Latex tables with user determined ordering from output of MonteCarlo function.
}
\details{
add details
parameter grids of length one are dropped from table (unless they are the only value in either cols or rows) and values are added to caption
to stack list elements in rows or columns add "list" to vector \code{rows} or \code{cols}.
}
\examples{
library(mvtnorm)
reg.func<-function(T,sdx,sig.noise,sig.eps,rho){
mux<-0
beta0<-0
beta1<-1
cov_noise_e<-sig.noise*sig.eps*rho
noise_e<-rmvnorm(T, mean=c(0,0), sigma=matrix(c(sig.noise^2,cov_noise_e,cov_noise_e,sig.eps^2),2,2))
x<-rnorm(T,mux,sdx)
noise<-noise_e[,1]
eps<-noise_e[,2]
X<-cbind(1,x+noise)
beta<-c(beta0,beta1)
y<-X\%*\%beta+eps
beta.hat<-solve(t(X)\%*\%X)\%*\%t(X)\%*\%y
sig.eps2.hat<-mean((y-X\%*\%beta.hat)^2)
sd.beta<-sqrt(diag(sig.eps2.hat*solve(t(X)\%*\%X)))
bias<-beta-beta.hat
test<-abs((beta.hat[2]-beta1)/sd.beta)>1.96
return(list("bias"=bias[2],"test"=test[2]))
}
T.grid<-c(50,100)
sdx.grid<-c(1,2)
sig.noise.grid<-c(0.1,1)
sig.eps.grid<-c(1,2)
rho.grid<-c(-0.5,0.5)
param.list=list("T"=T.grid, "sdx"=sdx.grid,"sig.noise"=sig.noise.grid, "sig.eps"=sig.eps.grid, "rho"=rho.grid)
output<-MonteCarlo(func=reg.func, M=250, param.list=param.list, ncpus=1, timeNtest=FALSE, save.res=FALSE, raw=TRUE, max.grid<-5000)
rows<-c("rho", "sig.noise", "sdx")
cols<-c("sig.eps","T")
MakeTable(output, rows, cols, digits=2)
}

